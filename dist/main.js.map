{"version":3,"sources":["webpack://wheather_js/./src/weather.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://wheather_js/./node_modules/date-fns/esm/toDate/index.js","webpack://wheather_js/./node_modules/date-fns/esm/isValid/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://wheather_js/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://wheather_js/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://wheather_js/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://wheather_js/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://wheather_js/./node_modules/date-fns/esm/format/index.js","webpack://wheather_js/./src/index.js"],"names":["Weather","_city","_weather","_description","_icon","_temp","_feelsLike","_country","_sunrise","_sunset","_timezone","_temp_min","_temp_max","_humidity","_clouds","_windSpeed","_windDirection","_units","this","city","weather","description","icon","temp","feelsLike","country","sunrise","calculateTimezone","sunset","temp_min","temp_max","humidity","clouds","windSpeed","windDirection","units","unitSymbol","setUnitSymbol","windUnitSymbol","setWindUnitSymbol","timezone","sunriseMs","timezoneMs","offset","Date","getTimezoneOffset","tempToImperial","velocityToImperial","tempToMetric","velocityToMetric","field","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","getTime","console","warn","Error","stack","NaN","isValid","dirtyDate","date","isNaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","array","predicate","key","test","findIndex","object","hasOwnProperty","findKey","valueCallback","rest","slice","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","toInteger","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","addLeadingZeros","targetLength","sign","output","abs","signedYear","getUTCFullYear","year","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","numberOfDigits","milliseconds","getUTCMilliseconds","pow","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","formatTimezoneShort","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","y","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","M","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","d","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","a","dayPeriodEnumValue","toLowerCase","b","B","h","H","K","k","m","s","S","X","_localize","timezoneOffset","_originalDate","x","O","z","t","originalDate","T","dateLongFormatter","pattern","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","weatherServices","params","data","fetchAPI","name","main","feels_like","sys","all","wind","speed","deg","error","rawData","APIkey","fetch","cityName","mode","lat","json","cod","backgroundColor","initialWeather","navigator","geolocation","getCurrentPosition","geolocationWeather","defaultWeather","position","coords","latitude","longitude","updateWeather","searchButton","document","getElementById","searchInput","async","cards","querySelectorAll","forEach","card","cardBody","querySelector","setAttribute","style","display","showSpinner","createWeather","displayData","color","rgba","hideSpinner","innerHTML","tempField","weatherField","tempCardImage","cityNameField","feelsLikeField","innerText","fillTemperatureCard","sunriseTime","sunsetTime","fillSunCard","minTemp","maxTemp","cloudCover","fillAdditionalWeatherCard","windDirectoin","transform","toFixed","fillWindCard","addEventListener","event","preventDefault","click","toggleUnitsButton","toggleUnits"],"mappings":"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","file":"main.js","sourcesContent":["class WeatherServices {\r\n    date;\r\n    feels_like;\r\n\r\n    async createWeather(params) {\r\n        try {\r\n            let data = await this.fetchAPI(params);\r\n            let weather = new Weather(\r\n                data.name,\r\n                data.weather[0].main,\r\n                data.weather[0].description,\r\n                data.weather[0].icon,\r\n                data.main.temp,\r\n                data.main.feels_like,\r\n                data.sys.country,\r\n                data.sys.sunrise,\r\n                data.sys.sunset,\r\n                data.timezone,\r\n                data.main.temp_min,\r\n                data.main.temp_max,\r\n                data.main.humidity,\r\n                data.clouds.all,\r\n                data.wind.speed,\r\n                data.wind.deg,\r\n                params.units);\r\n            return weather\r\n        } catch(error) {\r\n            return;\r\n        }\r\n    };\r\n\r\n\r\n    async fetchAPI (params) {\r\n        let APIkey = '652e61acc78edad67e8910709ea3d274';\r\n        let rawData;\r\n        if (params['cityName']) {\r\n            rawData = await fetch(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${params.cityName}&appid=${APIkey}&units=${params.units}`,\r\n                {mode: 'cors'});\r\n        } else if (params['lat']) {\r\n            rawData = await fetch(\r\n                `https://api.openweathermap.org/data/2.5/weather?lat=${params.lat}&lon=${params.long}&appid=${APIkey}&units=${params.units}`,\r\n                {mode: 'cors'});\r\n        }\r\n        let json = await rawData.json();\r\n        if (json.cod === 200) {\r\n            return json;\r\n        }\r\n        throw json.cod;\r\n    };\r\n}\r\n\r\n\r\nclass Weather {\r\n    constructor(_city, _weather, _description, _icon, _temp, _feelsLike, _country, _sunrise, _sunset, _timezone, _temp_min, _temp_max, _humidity, _clouds, _windSpeed, _windDirection, _units) {\r\n        this.city = _city;\r\n        this.weather = _weather;\r\n        this.description = _description;\r\n        this.icon = _icon;\r\n        this.temp = _temp;\r\n        this.feelsLike = _feelsLike;\r\n        this.country = _country;\r\n        this.sunrise = this.calculateTimezone(_sunrise, _timezone);\r\n        this.sunset = this.calculateTimezone(_sunset, _timezone)\r\n        this.temp_min = _temp_min;\r\n        this.temp_max = _temp_max;\r\n        this.humidity = _humidity;\r\n        this.clouds = _clouds;\r\n        this.windSpeed = _windSpeed;\r\n        this.windDirection = _windDirection;\r\n        this.units = _units;\r\n        this.unitSymbol = this.setUnitSymbol(_units);\r\n        this.windUnitSymbol = this.setWindUnitSymbol(_units);\r\n    }\r\n\r\n    calculateTimezone(sunrise, timezone) {\r\n        let sunriseMs = sunrise * 1000;\r\n        let timezoneMs = timezone * 1000;\r\n        let date = new Date(sunriseMs);\r\n        let offset = date.getTimezoneOffset() * 60000;\r\n        return new Date(sunriseMs + offset + timezoneMs);\r\n    }\r\n\r\n    setUnitSymbol(units) {\r\n        if (units === 'metric') {\r\n            return '°C';\r\n        } else if (units === 'imperial') {\r\n            return '°F';\r\n        } else {\r\n            return 'invalid units';\r\n        }\r\n    }\r\n\r\n    setWindUnitSymbol(units) {\r\n        if (units === 'metric') {\r\n            return 'm/sec'\r\n        } else if (units === 'imperial') {\r\n            return 'mph';\r\n        }\r\n    }\r\n\r\n    toggleUnits() {\r\n        if (this.units === 'metric') {\r\n            this.temp = this.tempToImperial(this.temp);\r\n            this.feelsLike = this.tempToImperial(this.feelsLike);\r\n            this.temp_min = this.tempToImperial(this.temp_min);\r\n            this.temp_max = this.tempToImperial(this.temp_max);\r\n            this.units = 'imperial';\r\n            this.unitSymbol = '°F';\r\n            this.windSpeed = this.velocityToImperial(this.windSpeed);\r\n            this.windUnitSymbol = 'mph';\r\n        } else if (this.units === 'imperial') {\r\n            this.temp = this.tempToMetric(this.temp);\r\n            this.feelsLike = this.tempToMetric(this.feelsLike);\r\n            this.temp_min = this.tempToMetric(this.temp_min);\r\n            this.temp_max = this.tempToMetric(this.temp_max);\r\n            this.units = 'metric';\r\n            this.unitSymbol = '°C';\r\n            this.windSpeed = this.velocityToMetric(this.windSpeed);\r\n            this.windUnitSymbol = 'm/sec';\r\n        }\r\n    }\r\n\r\n    tempToMetric(field) {\r\n        field = (field - 32) * (5 / 9);\r\n        return field\r\n    }\r\n\r\n    tempToImperial(field) {\r\n        field = (field * (9 / 5)) + 32;\r\n        return field\r\n    }\r\n\r\n    velocityToMetric(field) {\r\n        field = field / 2.236936;\r\n        return field;\r\n    }\r\n\r\n    velocityToImperial(field) {\r\n        field = field * 2.236936;\r\n        return field;\r\n    }\r\n}\r\n\r\nexport { WeatherServices }\r\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import {WeatherServices} from \"./weather\";\r\nimport { format } from \"date-fns\";\r\n\r\nlet weatherServices = new WeatherServices();\r\nlet backgroundColor = {'01d': [232, 196, 12], '01n': [0, 0, 0], '02d': [193, 178, 98], '02n': [85, 83, 78], '03d': [85, 83, 78], '03n': [85, 83, 78], '04d': [85, 83, 78], '04n': [85, 83, 78], '09d': [56, 65, 184], '09n': [56, 65, 184], '10d': [56, 65, 184], '10n': [56, 65, 184], '11d': [78, 6, 213], '11n': [78, 6, 213], '13d': [21, 179, 191], '13n': [21, 179, 191], '50d': [5, 26, 95], '50n': [5, 26, 95]};\r\n\r\nlet weather;\r\nlet units = 'metric';\r\n\r\n//Check if browser supports W3C Geolocation API\r\nfunction initialWeather() {\r\n    if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(geolocationWeather, defaultWeather);\r\n    }\r\n}\r\n\r\ninitialWeather()\r\n\r\n//Get latitude and longitude;\r\nfunction geolocationWeather(position) {\r\n    let params = {};\r\n    params['lat'] = position.coords.latitude;\r\n    params['long'] = position.coords.longitude;\r\n    params['units'] = units;\r\n    updateWeather(params);\r\n}\r\n\r\n//Default city if user denies geolocation\r\nfunction defaultWeather() {\r\n    let params = {};\r\n    params['cityName'] = 'Montevideo';\r\n    params['units'] = units;\r\n    updateWeather(params);\r\n}\r\n\r\nconst searchButton = document.getElementById('search-button');\r\nconst searchInput = document.getElementById('search-input')\r\n\r\n// Enter key behaves as click on search button\r\nsearchInput.addEventListener('keyup', (event) => {\r\n    if (event.code === \"Enter\") {\r\n        event.preventDefault();\r\n        searchButton.click();\r\n    }\r\n});\r\n\r\nsearchButton.addEventListener('click', searchCity);\r\n\r\nfunction searchCity() {\r\n    let params = {};\r\n    params['cityName'] = searchInput.value;\r\n    params['units'] = units;\r\n    updateWeather(params);\r\n}\r\n\r\nasync function updateWeather(params) {\r\n    try {\r\n        const cards = document.querySelectorAll('[id$=\"-card\"]');\r\n        cards.forEach((card) => showSpinner(card));\r\n\r\n        weather = await weatherServices.createWeather(params);\r\n        displayData(weather);\r\n\r\n        let color = backgroundColor[weather.icon];\r\n        let rgba = `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.2)`;\r\n        cards.forEach((card) => card.style.backgroundColor = rgba)\r\n        cards.forEach((card) => hideSpinner(card));\r\n    } catch(error) {\r\n        const notValidCityAlert = document.getElementById('not-valid-city-alert-container');\r\n        notValidCityAlert.innerHTML = `\r\n            <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\" id=\"not-valid-city-alert\">\r\n              <strong>Holy guacamole!</strong> The city is not valid or not in our database. Returning to default city\r\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>'`;\r\n        initialWeather();\r\n    }\r\n}\r\n\r\nfunction showSpinner(card) {\r\n    const cardBody = card.querySelector('[id$=\"card-body\"]');\r\n    const cardSpinner = card.querySelector('[id$=\"card-spinner-container\"]');\r\n    cardSpinner.setAttribute('class', 'd-flex align-items-center');\r\n    cardBody.style.display = 'none';\r\n}\r\n\r\nfunction hideSpinner(card) {\r\n    const cardBody = card.querySelector('[id$=\"card-body\"]');\r\n    const cardSpinner = card.querySelector('[id$=\"card-spinner-container\"]');\r\n    cardSpinner.setAttribute('class', 'd-none');\r\n    cardBody.style.display = 'block';\r\n}\r\n\r\n// Erases previous data on the App and renders the new data\r\nfunction displayData (data) {\r\n    fillTemperatureCard(data);\r\n    fillSunCard(data);\r\n    fillAdditionalWeatherCard(data);\r\n    fillWindCard(data);\r\n}\r\n\r\nfunction fillTemperatureCard(data) {\r\n    const tempField = document.getElementById('temperature-text');\r\n    const weatherField = document.getElementById('weather-text');\r\n    const tempCardImage = document.getElementById('temp-card-image');\r\n    const cityNameField = document.getElementById('city-name');\r\n    const feelsLikeField = document.getElementById('feels-like');\r\n    tempField.innerText = Math.round(data.temp) + data.unitSymbol;\r\n    weatherField.innerText = data.weather;\r\n    tempCardImage.setAttribute('src', `design/SVG/${data.icon}.svg`);\r\n    cityNameField.innerText = `${data.city} (${data.country})`;\r\n    feelsLikeField.innerText = `Feels like ${Math.round(data.feelsLike)}${data.unitSymbol}`;\r\n}\r\n\r\nfunction fillSunCard(data) {\r\n    const sunriseTime = document.getElementById('sunrise-time');\r\n    const sunsetTime = document.getElementById('sunset-time');\r\n    sunriseTime.innerText = format(data.sunrise, 'HH:mm');\r\n    sunsetTime.innerText = format(data.sunset, 'HH:mm');\r\n}\r\n\r\nfunction fillAdditionalWeatherCard(data) {\r\n    const minTemp = document.getElementById('min-temp');\r\n    const maxTemp = document.getElementById('max-temp');\r\n    const humidity = document.getElementById('humidity');\r\n    const cloudCover = document.getElementById('cloud-text');\r\n    minTemp.innerText = `Min: ${Math.round(data.temp_min)}${data.unitSymbol}`;\r\n    maxTemp.innerText = `Max: ${Math.round(data.temp_max)}${data.unitSymbol}`;\r\n    humidity.innerText = `Humidity: ${data.humidity}%`;\r\n    cloudCover.innerText = `Cloudiness: ${data.clouds}%`;\r\n}\r\n\r\nfunction fillWindCard(data) {\r\n    const windDirectoin = document.getElementById('wind-image');\r\n    const windSpeed = document.getElementById('wind-speed');\r\n    windDirectoin.style.transform = `rotate(${data.windDirection}deg)`;\r\n    windSpeed.innerText = `Speed: ${data.windSpeed.toFixed(2)}${data.windUnitSymbol}`;\r\n}\r\n\r\nconst toggleUnitsButton = document.getElementById('toggle-units-button');\r\n\r\ntoggleUnitsButton.addEventListener('click', toggleUnits);\r\n\r\nfunction toggleUnits() {\r\n    weather.toggleUnits();\r\n    displayData(weather);\r\n    toggleButtonContent();\r\n}\r\n\r\nfunction toggleButtonContent() {\r\n    if (toggleUnitsButton.innerHTML === '<b>°C</b> / °F') {\r\n        toggleUnitsButton.innerHTML = '°C / <b>°F</b>';\r\n    } else {\r\n        toggleUnitsButton.innerHTML = '<b>°C</b> / °F';\r\n    }\r\n}\r\n"],"sourceRoot":""}